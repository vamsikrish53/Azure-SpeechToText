{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/azure-speech-to-text/azure-speech-to-text.component.ts","webpack:///src/app/azure-speech-to-text/azure-speech-to-text.component.html","webpack:///src/app/google-speech-to-text/google-speech-to-text.component.html","webpack:///src/app/google-speech-to-text/google-speech-to-text.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///https-proxy-agent (ignored)","webpack:///ws (ignored)","webpack:///external/ocsp/ocsp (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","library","addIconPacks","declarations","providers","bootstrap","AzureSpeechToTextComponent","lastRecognized","recognizing","tooltip","speechConfig","fromSubscription","AudioContext","window","soundContext","alert","console","log","event","stop","audioConfig","fromDefaultMicrophoneInput","speechRecognitionLanguage","enableDictation","recognizer","recognized","recognizerCallback","bind","startContinuousRecognitionAsync","s","result","text","reason","stopContinuousRecognitionAsync","stopRecognizer","err","error","close","undefined","speechSynthesisOutputFormat","Audio16Khz32KBitRateMonoMp3","synthesizer","fromSpeakerOutput","speakTextAsync","speechToText","textToSpeech","GoogleSpeechToTextComponent","zone","title","gapi","load","loadClient","client","setApiKey","stopRecording","navigator","getUserMedia","URL","webkitURL","audio_context","recorder","numChannels","mediaDevices","audio","stream","init","audio_stream","start","timeOut","setTimeout","clearTimeout","getAudioTracks","blob","buffer","convertToBase64","reader","FileReader","readAsDataURL","onloadend","base64data","split","base64AudioFormat","execute","speech","recognize","response","run","results","alternatives","transcript","textOutput","startRecording","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AzureSpeechToTextComponent } from './azure-speech-to-text/azure-speech-to-text.component';\nimport { GoogleSpeechToTextComponent } from './google-speech-to-text/google-speech-to-text.component';\n\nconst routes: Routes = [\n  {\n    path: 'azure',\n    component: AzureSpeechToTextComponent\n  },\n\n  /*{\n    path: 'google',\n    component: GoogleSpeechToTextComponent\n  },*/\n\n  {\n    path: '',\n    redirectTo: 'azure',\n    pathMatch: 'full'\n  },\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n \r\n}\r\n","<div class=\"nav\">\r\n    <div class=\"left\">\r\n        Azure Speech Services\r\n    </div>\r\n    <div class=\"middle\">\r\n        <a [routerLink]=\"[ '/', 'azure' ]\"class=\"item\">AZURE</a>\r\n        <!-- <a [routerLink]=\"[ '/', 'google' ]\" class=\"item\">GOOGLE</a> -->\r\n    </div>\r\n</div>\r\n\r\n\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { AzureSpeechToTextComponent } from './azure-speech-to-text/azure-speech-to-text.component';\r\nimport { GoogleSpeechToTextComponent } from './google-speech-to-text/google-speech-to-text.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AzureSpeechToTextComponent,\r\n    GoogleSpeechToTextComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FontAwesomeModule,\r\n    FormsModule      \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { \r\n  constructor(library: FaIconLibrary) {\r\n    library.addIconPacks(fas, fab, far);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AudioConfig, ResultReason, SpeechConfig, SpeechRecognizer, SpeechSynthesizer, SpeechSynthesisOutputFormat } from 'microsoft-cognitiveservices-speech-sdk';\n@Component({\n  selector: 'app-azure-speech-to-text',\n  templateUrl: './azure-speech-to-text.component.html',\n  styleUrls: ['./azure-speech-to-text.component.scss']\n})\nexport class AzureSpeechToTextComponent implements OnInit {\n\n  recognizer: SpeechRecognizer;\n  synthesizer: SpeechSynthesizer;\n  speechConfig: SpeechConfig;\n  soundContext: any;\n  text: string;\n  lastRecognized: string = '';\n  recognizing: boolean = false;\n  tooltip: string = \"Start speech\";\n\n  ngOnInit(): void {\n    this.speechConfig = SpeechConfig.fromSubscription(\"f7fbe62e52ef44cfb6d665fe4803196f\", \"westus\");\n    try {\n      var AudioContext = window.AudioContext || false;\n      if (AudioContext) {\n        this.soundContext = new AudioContext();\n      } else {\n        alert(\"AudioContext not supported\");\n      }\n    }\n    catch (e) {\n      console.log(\"no sound context found, no audio output. \" + e);\n    }\n  }\n\n  speechToText(event) {\n    if (this.recognizing) {\n      this.tooltip = \"Start speech\";\n      this.stop();\n      this.recognizing = false;\n    }\n    else {\n      this.recognizing = true;\n      this.tooltip = \"Stop speech\";\n      console.log(\"recording\");\n      const audioConfig = AudioConfig.fromDefaultMicrophoneInput();\n      this.speechConfig.speechRecognitionLanguage = 'en-US';\n      this.speechConfig.enableDictation();\n      this.recognizer = new SpeechRecognizer(this.speechConfig, audioConfig)\n      this.recognizer.recognizing = this.recognizer.recognized = this.recognizerCallback.bind(this)\n      this.recognizer.startContinuousRecognitionAsync();\n    }\n  }\n\n  recognizerCallback(s, e) {\n    console.log(\"Response ::    \" + e.result.text);\n    const reason = ResultReason[e.result.reason];\n    console.log(\"Reason :: \" + reason);\n    if (reason == \"RecognizingSpeech\" && e.result.text) {\n      this.text = this.lastRecognized + e.result.text;\n    }\n    if (reason == \"RecognizedSpeech\" && e.result.text) {\n      this.lastRecognized += e.result.text;\n      this.text = this.lastRecognized;\n    }\n  }\n\n  stop() {\n    this.recognizer.stopContinuousRecognitionAsync(\n      stopRecognizer.bind(this),\n      function (err) {\n        stopRecognizer.bind(this)\n        console.error(err)\n      }.bind(this)\n    )\n    function stopRecognizer() {\n      this.recognizer.close()\n      this.recognizer = undefined\n      console.log('stopped');\n    }\n  }\n\n  textToSpeech() {\n    this.speechConfig.speechSynthesisOutputFormat = SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\n    this.synthesizer = new SpeechSynthesizer(this.speechConfig, AudioConfig.fromSpeakerOutput());\n    this.synthesizer.speakTextAsync(this.text, (result) => {\n      this.synthesizer.close();\n    }, (error) => {\n      this.synthesizer.close();\n      window.alert(error);\n    });\n  };\n\n}\n","<div style=\"text-align:center\">\n    <h1>\n      Azure speech to text and text to speech using Azure NPM module\n    </h1>\n  </div>\n  \n  <div class=\"main\">\n    <textarea [(ngModel)]='text' class=\"textarea\" rows=\"6\" placeholder=\"Start speaking by clicking on the mic icon or Enter text and click Speak to listen to it\"></textarea>\n    <div class=\"action-btns\">\n      <div class=\"mic-icon\" >\n        <fa-icon icon=\"microphone\" [class.icon-listening]=\"recognizing\" title=\"{{tooltip}}\" (click)=\"speechToText($event)\"></fa-icon>\n        <div *ngIf=\"recognizing\" class=\"pulse-ring\"></div>\n      </div>\n  \n      <div class=\"speak\" >\n        <button (click)=\"textToSpeech()\">Speak</button>\n      </div>\n    </div>\n  </div>","<div style=\"text-align:center\">\n    <h1>\n        Google speech to text using Angular\n    </h1>\n</div>\n\n<div class=\"main\">\n    <textarea [(ngModel)]='textOutput' class=\"textarea\" rows=\"6\"\n        placeholder=\"Start speaking by clicking on the mic icon\"></textarea>\n    <div class=\"mic-icon\">\n        <fa-icon icon=\"microphone\" [class.icon-listening]=\"recognizing\" title=\"{{tooltip}}\" (click)=\"startRecording()\">\n        </fa-icon>\n        <div *ngIf=\"recognizing\" class=\"pulse-ring\"></div>\n    </div>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport Recorder from 'recorder-js';\ndeclare var gapi: any;\n\n@Component({\n  selector: 'app-google-speech-to-text',\n  templateUrl: './google-speech-to-text.component.html',\n  styleUrls: ['./google-speech-to-text.component.scss']\n})\nexport class GoogleSpeechToTextComponent implements OnInit {\n\n  title = 'Speech To Text';\n\n  textOutput;\n  private lastRecognized: string = '';\n  recognizing: boolean = false;\n  tooltip: string = \"Start speech\";\n  audio_context: AudioContext;\n  recorder: Recorder;\n  audio_stream;\n  base64AudioFormat;\n  timeOut;\n\n  constructor(private zone: NgZone) { }\n\n  async ngOnInit() {\n    await gapi.load(\"client\", this.loadClient);\n  }\n\n  /**\n   * Load the GAPI first\n   */\n  loadClient() {\n    console.log(\"Loaded client googke\");\n    gapi.client.setApiKey('AIzaSyBfDbvjN4PWkVc8p5qGNlI7m1qntrxDTOI');\n    return gapi.client.load(\"https://speech.googleapis.com/$discovery/rest?version=v1\", \"v1\")\n      .then(function () { console.log(\"GAPI client loaded for API\"); },\n        function (err) { console.error(\"Error loading GAPI client for API\", err); });\n  }\n\n  /**\n   * Statrts the recording and auto stops after 10 secs\n   */\n  async startRecording() {\n    if (this.recognizing) {\n      this.stopRecording();\n    }\n    else {\n      try {\n        window.AudioContext = window.AudioContext;\n        navigator.getUserMedia = navigator.getUserMedia;\n        window.URL = window.URL || window.webkitURL;\n        // Store the instance of AudioContext globally\n        this.audio_context = new AudioContext;\n        this.recorder = new Recorder(this.audio_context, { numChannels: 1 });\n        console.log('Audio context is ready !');\n      } catch (e) {\n        alert('No web audio support in this browser!');\n      }\n      // Access the Microphone using the navigator.getUserMedia method to obtain a stream\n      try {\n        let stream = await navigator.mediaDevices.getUserMedia({ audio: true })\n        this.recorder.init(stream);\n        this.audio_stream = stream;\n        this.recognizing = true;\n      }\n      catch (err) {\n        console.log('Uh oh... unable to get stream...', err)\n      }\n      this.recorder.start()\n        .then(() => console.log(\"Recording started\"))\n        .catch(err => console.log('Not able to start recording', err));\n      this.timeOut = setTimeout(() => {\n        this.stopRecording();\n      }, 10000);\n    }\n  }\n\n  /**\n   * Stops the recording and calls convertToBase64\n   */\n  stopRecording() {\n    console.log(\"Recording stoped\");\n    // Clear timeouts if any\n    clearTimeout(this.timeOut);\n    this.recognizing = false;\n    this.audio_stream.getAudioTracks()[0].stop();\n    this.recorder.stop()\n      .then(({ blob, buffer }) => {\n        this.convertToBase64(blob);\n      });\n  }\n\n  /**\n   * Converts the audio to Base64 encoded and \n   * Calls the execute method\n   * @param blob \n   */\n  convertToBase64(blob) {\n    var reader = new FileReader();\n    reader.readAsDataURL(blob);\n    reader.onloadend = () => {\n      var base64data = (<string>reader.result).split(',')[1];\n      this.base64AudioFormat = base64data;\n      this.execute();\n    }\n  }\n\n  /**\n   * Calls the google speech to text API\n   */\n  async execute() {\n    let response = await gapi.client.speech.speech.recognize({\n      \"resource\": {\n        \"audio\": {\n          \"content\": this.base64AudioFormat\n        },\n        \"config\": {\n          \"enableAutomaticPunctuation\": true,\n          \"encoding\": \"LINEAR16\",\n          \"languageCode\": \"en-US\",\n          \"sampleRateHertz\": 44100,\n          \"audioChannelCount\": 2\n        }\n      }\n    });\n\n    this.zone.run(() => {\n      if (response && response.result && response.result.results && response.result.results[0] && response.result.results[0].alternatives[0].transcript)\n        this.textOutput = response?.result?.results[0]?.alternatives[0]?.transcript;\n      else\n        alert(\"Sorry. Please try again\");\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}